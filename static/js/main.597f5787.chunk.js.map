{"version":3,"sources":["components/UserList/User/User.js","components/UserList/UserList.js","components/CommentList/Comment/Comment.js","components/CommentList/CommentList.js","components/PostList/Post/Post.js","components/PostList/PostList.js","components/Search/Search.js","components/RootComponent.js","reducers/rootReducer.js","index.js"],"names":["User","user","style","setActiveUser","className","onClick","name","connect","state","users","posts","activeUser","dispatch","type","styleFirstLi","map","index","key","comments","setEditingComment","editComment","indexComment","editingComment","removeComment","comment","useState","edit","setEdit","string","setString","indexOf","currentComment","text","defaultValue","onChange","event","target","value","str","addComment","textInput","id","addString","currentPostComments","filter","Fragment","ref","input","placeholder","preventDefault","checkComment","post","setActivePost","activePost","quantityComments","length","title","body","visiblePosts","setStyle","setSearchQuery","searchQuery","searchText","toLowerCase","RootComponent","fetch","promisePosts","promiseUsers","json","this","props","setUsers","setPosts","setVisiblePosts","nextProps","filteredPost","includes","userId","href","React","Component","store","createStore","action","copy","push","updateComments","copyComment","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.597f5787.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction User({user, style, setActiveUser}) {\r\n\r\n    return (\r\n        <li className={style}\r\n            onClick={() => setActiveUser(user)}\r\n        >\r\n        <div className=\"user-photo\">\r\n        </div>\r\n       <span>\r\n              {user.name}\r\n       </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport User from './User/User';\r\n\r\nfunction UserList({users, posts, activeUser, setActiveUser}) {\r\n\r\n    const styleFirstLi = !activeUser ? 'active_user' : '';\r\n\r\n    function resetVisiblePosts() {\r\n        setActiveUser(null);\r\n    }\r\n\r\n    return (\r\n        <ul className={\"app-users-list\"}\r\n        >\r\n            <li className={styleFirstLi}\r\n                onClick={resetVisiblePosts}\r\n            >\r\n            <div className=\"user-photo ilex\">\r\n            </div>\r\n\r\n                All Subscriptions\r\n            </li>\r\n            {\r\n                users.map((user, index) =>\r\n                    <User\r\n                        style={activeUser === user ? 'active_user' : ''}\r\n                        key={index}\r\n                        user={user}\r\n                        setActiveUser={setActiveUser}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateFromProps = (state) => ({\r\n    users: state.users,\r\n    posts: state.posts,\r\n    activeUser: state.activeUser\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setActiveUser: (user) => dispatch({\r\n            type: \"SET_ACTIVE_USER\",\r\n            activeUser: user\r\n        }),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateFromProps, mapDispatchProps)(UserList);","import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Comment({comment, comments, setEditingComment, removeComment}) {\r\n\r\n   const [edit, setEdit]= useState(false);\r\n   const [string, setString] = useState('');\r\n   const index = comments.indexOf(comment);\r\n   const currentComment = comments[index];\r\n\r\n\r\n   function setComment (str) {\r\n     if(str===''){\r\n       setEdit(!edit);\r\n       return;\r\n     }\r\n     setEditingComment(str, index);\r\n     setString('');\r\n     setEdit(!edit);\r\n   }\r\n\r\n   function cancelComment () {\r\n    setString('');\r\n    setEdit(!edit);\r\n   }\r\n\r\n    return (\r\n        <li className={\"user-post-added-comment\"}>\r\n            {comment.text}\r\n\r\n          <div\r\n            className={\"remove-comment\"}\r\n            onClick={()=>removeComment(index)}\r\n          >\r\n          </div>\r\n\r\n\r\n          <div className={\"post-comment-edit\"}\r\n          >\r\n\r\n            {edit?\r\n              <div className={\"editing-comment\"}>\r\n\r\n                <input\r\n                  className={\"editing-comment-input\"}\r\n                  type={\"text\"}\r\n                  defaultValue={currentComment.text}\r\n                  onChange={(event)=>{setString(event.target.value)}}\r\n                />\r\n\r\n                <div>\r\n\r\n                  <button\r\n                    onClick={()=>setComment(string, index)}\r\n                  >Save\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={cancelComment}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n\r\n                </div>\r\n\r\n              </div>\r\n              :\r\n              <span\r\n                className={\"comment-edit\"}\r\n                onClick={()=>setEdit(!edit)}\r\n              >\r\n                Edit\r\n              </span>\r\n\r\n            }\r\n          </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state)=>({\r\n  comments: state.comments\r\n});\r\n\r\n\r\nconst mapDispatchPprops = (dispatch)=>{\r\n  return {\r\n    setEditingComment:(editComment, indexComment)=>dispatch({\r\n      type: \"SET_EDIT_COMMENT\",\r\n      editingComment: editComment,\r\n      indexComment: indexComment,\r\n    }),\r\n\r\n    removeComment:(indexComment)=> dispatch({\r\n      type: \"REMOVE_COMMENT\",\r\n      indexComment: indexComment\r\n    })\r\n  }\r\n};\r\nexport default connect(mapStateProps, mapDispatchPprops)(Comment);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Comment from './Comment/Comment'\r\n\r\nfunction CommentList({id, comments, addComment}) {\r\n\r\n    const [str, addString] = useState('');\r\n    const currentPostComments = comments.filter(comment => comment.id === id);\r\n    let textInput;\r\n\r\n    function checkComment(event, string) {\r\n\r\n      event.preventDefault();\r\n\r\n      if (string === '') {\r\n        return;\r\n      }\r\n      const comment = {\r\n        id: id,\r\n        text: str\r\n      };\r\n\r\n      addComment(comment);\r\n      addString('');\r\n      textInput.value='';\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={\"user-post-comment-caption\"}>Comments</div>\r\n\r\n            <ul className=\"user-post-comments\">\r\n                {\r\n                    currentPostComments.map((comment, index) =>\r\n                        <Comment\r\n                            key={index}\r\n                            comment={comment}\r\n                        />\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n\r\n            <form className={\"user-post-set-comment\"}>\r\n                <input\r\n                    ref={(input) => textInput = input}\r\n                    placeholder={\"Type your message\"}\r\n                    onChange={(event)=> {\r\n\r\n                        addString(event.target.value);\r\n                        event.preventDefault();\r\n                    }}\r\n\r\n                />\r\n                <button\r\n                    onClick={(event) => checkComment(event, str)}\r\n                >\r\n                    Add\r\n                </button>\r\n            </form>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n    comments: state.comments\r\n});\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        addComment: (comment) => dispatch({\r\n            type: \"ADD_COMMENT\",\r\n            comment: comment\r\n        })\r\n    }\r\n};\r\nexport default connect(mapStateProps, mapDispatchProps)(CommentList);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CommentList from '../../CommentList/CommentList'\r\n\r\nfunction Post({post, comments, style, activePost, setActivePost}) {\r\n\r\n    const quantityComments = comments.filter(comment => comment.id === post.id).length;\r\n\r\n    return (\r\n\r\n        <li className={style}\r\n        >\r\n            <div>\r\n                <span className={\"user-post-title\"}>\r\n                        {post.title}\r\n                </span>\r\n\r\n                <span className={\"user-post-content\"}>\r\n                         {post.body}\r\n                </span>\r\n\r\n                <div className={\"user-post-comments-footer\"}>\r\n\r\n                    <div className={\"user-post-open-comments\"}\r\n                         onClick={() => {\r\n                           if(style==='user-post-active'){\r\n                             setActivePost(null)\r\n                           }else\r\n                           setActivePost(post);\r\n\r\n                         }}\r\n                    >\r\n                    </div>\r\n\r\n                    <div className={\"user-post-quantity-comments\"}>\r\n                        {quantityComments ? quantityComments : null}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n              style==='user-post-active' ? <CommentList id={post.id}/> : null\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateProps = (state) => ({\r\n    comments: state.comments\r\n});\r\nexport default connect(mapStateProps)(Post);","import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Post from './Post/Post'\r\n\r\nfunction PostList({visiblePosts}) {\r\n\r\n  const [activePost, setActivePost] = useState(null);\r\n\r\n\r\n  function setStyle(post, activePost) {\r\n    if(activePost && (post.id === activePost.id)){\r\n      return \"user-post-active\"\r\n    }\r\n    return\"user-post\";\r\n  }\r\n\r\n    return (\r\n        <ul className={\"post-list\"}>\r\n            {\r\n                visiblePosts.map(post =>\r\n\r\n\r\n                    <Post\r\n                        key={post.id}\r\n                        post={post}\r\n                        style={setStyle(post, activePost)}\r\n                        setActivePost={setActivePost}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n    visiblePosts: state.visiblePosts\r\n});\r\nexport default connect(mapStateProps)(PostList);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction Search({setSearchQuery}) {\r\n\r\n    function filterBySearchQuery(event) {\r\n        const searchText = event.target.value.toLowerCase();\r\n        setSearchQuery(searchText);\r\n    }\r\n\r\n    return (\r\n        <div className={\"right-block-search\"}>\r\n\r\n            <input\r\n                   className={\"search\"}\r\n                   type=\"text\"\r\n                   onChange={filterBySearchQuery}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setSearchQuery: (searchQuery) => dispatch({\r\n            type: \"SET_SEARCH_QUERY\",\r\n            searchQuery: searchQuery\r\n        }),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchProps)(Search);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserList from './UserList/UserList';\r\nimport PostList from './PostList/PostList';\r\nimport Search from './Search/Search';\r\n\r\nclass RootComponent extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        const promisePosts = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n        const promiseUsers = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const posts = await promisePosts.json();\r\n        const users = await promiseUsers.json();\r\n\r\n        this.props.setUsers(users);\r\n        this.props.setPosts(posts);\r\n        this.props.setVisiblePosts(posts);\r\n    }\r\n\r\n    componentDidUpdate(nextProps) {\r\n\r\n        if ((this.props.activeUser !== nextProps.activeUser) || (this.props.searchQuery !== nextProps.searchQuery)) {\r\n\r\n            let filteredPost;\r\n\r\n            if (this.props.activeUser) {\r\n                filteredPost = this.props.posts\r\n                    .filter(post => post.title.includes(this.props.searchQuery))\r\n                    .filter(post => post.userId === this.props.activeUser.id);\r\n            } else {\r\n                filteredPost = this.props.posts.filter(post => post.title.includes(this.props.searchQuery))\r\n            }\r\n            this.props.setVisiblePosts(filteredPost);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <main>\r\n\r\n                    <div className={\"left-block\"}>\r\n\r\n                        <a href={\"https://drew11.github.io/snov-front-end-test/\"}>\r\n                            <div className={\"left-block-logo\"}/>\r\n                        </a>\r\n\r\n                        <span className={\"left-block-caption\"}>\r\n                            Subscriptions\r\n                        </span>\r\n\r\n                        <UserList/>\r\n\r\n                    </div>\r\n\r\n                    <div className={\"right-block\"}>\r\n\r\n                        <Search/>\r\n\r\n                        <PostList/>\r\n\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateFromProps = (state) => ({\r\n    activeUser: state.activeUser,\r\n    posts: state.posts,\r\n    searchQuery: state.searchQuery\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setUsers: (users) => dispatch({\r\n            type: \"SET_USERS\",\r\n            users: users\r\n        }),\r\n        setPosts: (posts) => dispatch({\r\n            type: \"SET_POSTS\",\r\n            posts: posts\r\n        }),\r\n        setVisiblePosts: (visiblePosts) => dispatch({\r\n            type: \"SET_VISIBLE_POSTS\",\r\n            visiblePosts: visiblePosts\r\n        })\r\n    }\r\n};\r\n\r\nexport default connect(mapStateFromProps, mapDispatchProps)(RootComponent);","import {createStore} from 'redux';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    posts: [],\r\n    visiblePosts: [],\r\n    activeUser: null,\r\n    searchQuery: '',\r\n    comments: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n\r\n            };\r\n        case \"SET_POSTS\":\r\n            return {\r\n                ...state,\r\n                posts: action.posts\r\n\r\n            };\r\n        case \"SET_VISIBLE_POSTS\":\r\n            return {\r\n                ...state,\r\n                visiblePosts: action.visiblePosts\r\n            };\r\n\r\n        case \"SET_ACTIVE_USER\":\r\n            return {\r\n                ...state,\r\n                activeUser: action.activeUser\r\n            };\r\n        case \"SET_SEARCH_QUERY\":\r\n            return {\r\n                ...state,\r\n                searchQuery: action.searchQuery\r\n            };\r\n        case \"ADD_COMMENT\":\r\n            const copy = [...state.comments];\r\n            copy.push(action.comment);\r\n\r\n            return {\r\n                ...state,\r\n                comments: copy\r\n            };\r\n        case \"SET_EDIT_COMMENT\":\r\n\r\n             const updateComments =  state.comments.map((comment,index)=>{\r\n                 const copyComment = {...comment};\r\n\r\n                 if(index===action.indexComment){\r\n                     copyComment.text = action.editingComment;\r\n                 }\r\n\r\n                 return copyComment;\r\n             });\r\n\r\n            return {\r\n              ...state,\r\n              comments: updateComments\r\n            };\r\n\r\n        case \"REMOVE_COMMENT\":\r\n          const copyComments = [...state.comments];\r\n          const updateCommentsRemove = copyComments.filter((comment, index)=>index !== action.indexComment);\r\n\r\n          return {\r\n            ...state,\r\n            comments: updateCommentsRemove\r\n          };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport './style/index.scss';\r\nimport RootComponent from './components/RootComponent';\r\nimport store from './reducers/rootReducer'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <RootComponent/>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}