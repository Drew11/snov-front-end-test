{"version":3,"sources":["components/UserList/User/User.js","components/UserList/UserList.js","components/CommentList/Comment/Comment.js","components/CommentList/CommentList.js","components/PostList/Post/Post.js","components/PostList/PostList.js","components/Search/Search.js","components/RootComponent.js","reducers/rootReducer.js","index.js"],"names":["User","user","style","setActiveUser","className","onClick","name","connect","state","users","posts","activeUser","dispatch","type","styleFirstLi","map","index","key","Comment","comment","comments","addComment","id","useState","str","addString","text","currentPostComments","filter","Fragment","placeholder","onChange","event","target","value","preventDefault","comm","checkComment","Post","editing","nextProps","this","props","activePost","setState","prevState","console","log","post","title","body","setActivePost","length","React","Component","visiblePosts","setSearchQuery","searchQuery","searchText","toLowerCase","RootComponent","fetch","promisePosts","promiseUsers","json","setUsers","setPosts","setVisiblePosts","filteredPost","includes","userId","href","store","createStore","action","copy","push","subscribe","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0aada23.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction User({user, style, setActiveUser}) {\r\n\r\n    return (\r\n        <li className={style}\r\n            onClick={() => setActiveUser(user)}\r\n        >\r\n        <div className=\"user-photo\">\r\n        </div>\r\n       <span>\r\n              {user.name}\r\n       </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport User from './User/User';\r\n\r\nfunction UserList({users, posts, activeUser, setActiveUser}) {\r\n\r\n    const styleFirstLi = !activeUser ? 'active_user' : '';\r\n\r\n    function resetVisiblePosts() {\r\n        setActiveUser(null);\r\n    }\r\n\r\n    return (\r\n        <ul className={\"app-users-list\"}\r\n        >\r\n            <li className={styleFirstLi}\r\n                onClick={resetVisiblePosts}\r\n            >\r\n            <div className=\"user-photo ilex\">\r\n            </div>\r\n\r\n                All Subscriptions\r\n            </li>\r\n            {\r\n                users.map((user, index) =>\r\n                    <User\r\n                        style={activeUser === user ? 'active_user' : ''}\r\n                        key={index}\r\n                        user={user}\r\n                        setActiveUser={setActiveUser}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateFromProps = (state) => ({\r\n    users: state.users,\r\n    posts: state.posts,\r\n    activeUser: state.activeUser\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setActiveUser: (user) => dispatch({\r\n            type: \"SET_ACTIVE_USER\",\r\n            activeUser: user\r\n        }),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateFromProps, mapDispatchProps)(UserList);","import React from 'react';\r\n\r\nfunction Comment({comment}) {\r\n    return (\r\n        <li className={\"user-post-added-comment\"}>\r\n            {comment}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Comment from './Comment/Comment'\r\n\r\n\r\nfunction CommentList({id, comments, addComment}) {\r\n\r\n    const [str, addString] = useState('');\r\n    const comment = {\r\n        id: id,\r\n        text: str\r\n    };\r\n\r\n    const currentPostComments = comments.filter(comment => comment.id === id);\r\n\r\n    function checkComment(event, comm) {\r\n        event.preventDefault();\r\n        if (comm.text === '') {\r\n            return;\r\n        }\r\n        addComment(comm);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={\"user-post-comment-caption\"}>Comments</div>\r\n\r\n            <ul className=\"user-post-comments\">\r\n                {\r\n                    currentPostComments.map((comment, index) =>\r\n                        <Comment\r\n                            key={index}\r\n                            comment={comment.text}\r\n                        />\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n\r\n            <form className={\"user-post-set-comment\"}>\r\n                <input\r\n                    placeholder={\"Type your message\"}\r\n                    onChange={(event)=> {\r\n                        addString(event.target.value);\r\n                        event.preventDefault();\r\n                    }}\r\n\r\n                />\r\n                <button\r\n                    onClick={(event) => checkComment(event, comment)}\r\n                >\r\n                    Add\r\n                </button>\r\n            </form>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n    comments: state.comments\r\n});\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        addComment: (comment) => dispatch({\r\n            type: \"ADD_COMMENT\",\r\n            comment: comment\r\n        })\r\n    }\r\n};\r\nexport default connect(mapStateProps, mapDispatchProps)(CommentList);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CommentList from '../../CommentList/CommentList'\r\n\r\nclass Post extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            editing :false,\r\n        }\r\n    }\r\n\r\n\r\n    // const [editing, setEditing] = useState(false);\r\n    // const quantityComments = comments.filter(comment => comment.id === post.id).length;\r\n    // const currentPost = posts.filter(post=>post === post);\r\n    //\r\n    //  c\r\n\r\n\r\n   // console.log(currentPost);\r\n    componentDidUpdate(nextProps){\r\n        if(this.props.activePost!==nextProps.activePost){\r\n            this.setState(prevState=>({\r\n                    ...prevState,\r\n                    editing: !prevState.editing\r\n                })\r\n            )\r\n\r\n            //this.props.setActivePost(this.props.post)\r\n        }\r\n\r\n    }\r\n\r\n   render(){\r\n       console.log(this.state)\r\n\r\n\r\n       return (\r\n           <li className={this.state.editing?\"user-post-active\" : \"user-post\"}\r\n           >\r\n               <div>\r\n                <span className={\"user-post-title\"}>\r\n                        {this.props.post.title}\r\n                </span>\r\n\r\n                   <span className={\"user-post-content\"}>\r\n                         {this.props.post.body}\r\n                </span>\r\n\r\n                   <div className={\"user-post-comments-footer\"}>\r\n\r\n                       <div className={\"user-post-open-comments\"}\r\n                            onClick={() => {\r\n\r\n                                this.props.setActivePost(this.props.post)\r\n                            }\r\n                            }\r\n                       >\r\n                       </div>\r\n\r\n                       <div className={\"user-post-quantity-comments\"}>\r\n                           {this.props.comments.filter(comment => comment.id === this.props.id).length ?this.props.comments.filter(comment => comment.id === this.props.id).length : null}\r\n                       </div>\r\n\r\n                   </div>\r\n\r\n               </div>\r\n               {\r\n                   this.state.editing ? <CommentList id={this.props.post.id}/> : null\r\n               }\r\n           </li>\r\n       )\r\n\r\n   }\r\n\r\n}\r\n\r\n\r\nconst mapStateProps = (state) => ({\r\n    comments: state.comments,\r\n    activePost:state.activePost,\r\n    posts: state.posts\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateProps)(Post);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Post from './Post/Post'\r\n\r\nfunction PostList( {visiblePosts, activePost, setActivePost }) {\r\n\r\n\r\n\r\n    return (\r\n        <ul className={\"post-list\"}>\r\n            {\r\n                visiblePosts.map(post =>\r\n                    <Post\r\n                        key={post.id}\r\n                        post={post}\r\n                        style={activePost? \"user-post-active\" : \"user-post\"}\r\n                        setActivePost={setActivePost}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n    visiblePosts: state.visiblePosts,\r\n    activePost: state.activePost\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) =>{\r\n    return{\r\n        setActivePost: (post)=>dispatch({\r\n            type:\"SET_ACTIVE_POST\",\r\n            activePost: post\r\n        })\r\n    }};\r\n\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(PostList);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction Search({setSearchQuery}) {\r\n\r\n    function filterBySearchQuery(event) {\r\n        const searchText = event.target.value.toLowerCase();\r\n        setSearchQuery(searchText);\r\n    }\r\n\r\n    return (\r\n        <div className={\"right-block-search\"}>\r\n\r\n            <input\r\n                   className={\"search\"}\r\n                   type=\"text\"\r\n                   onChange={filterBySearchQuery}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setSearchQuery: (searchQuery) => dispatch({\r\n            type: \"SET_SEARCH_QUERY\",\r\n            searchQuery: searchQuery\r\n        }),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchProps)(Search);","import React from 'react';\nimport {connect} from 'react-redux';\nimport UserList from './UserList/UserList';\nimport PostList from './PostList/PostList';\nimport Search from './Search/Search';\n\nclass RootComponent extends React.Component {\n\n    async componentDidMount() {\n        const promisePosts = await fetch('https://jsonplaceholder.typicode.com/posts');\n        const promiseUsers = await fetch('https://jsonplaceholder.typicode.com/users');\n        const posts = await promisePosts.json();\n        const users = await promiseUsers.json();\n\n        this.props.setUsers(users);\n        this.props.setPosts(posts);\n        this.props.setVisiblePosts(posts);\n    }\n\n    componentDidUpdate(nextProps) {\n\n        if ((this.props.activeUser !== nextProps.activeUser) || (this.props.searchQuery !== nextProps.searchQuery)) {\n\n            let filteredPost;\n\n            if (this.props.activeUser) {\n                filteredPost = this.props.posts\n                    .filter(post => post.title.includes(this.props.searchQuery))\n                    .filter(post => post.userId === this.props.activeUser.id);\n            } else {\n                filteredPost = this.props.posts.filter(post => post.title.includes(this.props.searchQuery))\n            }\n            this.props.setVisiblePosts(filteredPost);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <main>\n\n                    <div className={\"left-block\"}>\n\n                        <a href={\"https://drew11.github.io/snov-front-end-test/\"}>\n                            <div className={\"left-block-logo\"}/>\n                        </a>\n\n                        <span className={\"left-block-caption\"}>\n                            Subscriptions\n                        </span>\n\n                        <UserList/>\n\n                    </div>\n\n                    <div className={\"right-block\"}>\n\n                        <Search/>\n\n                        <PostList/>\n\n                    </div>\n\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateFromProps = (state) => ({\n    activeUser: state.activeUser,\n    posts: state.posts,\n    searchQuery: state.searchQuery\n});\n\nconst mapDispatchProps = (dispatch) => {\n    return {\n        setUsers: (users) => dispatch({\n            type: \"SET_USERS\",\n            users: users\n        }),\n        setPosts: (posts) => dispatch({\n            type: \"SET_POSTS\",\n            posts: posts\n        }),\n        setVisiblePosts: (visiblePosts) => dispatch({\n            type: \"SET_VISIBLE_POSTS\",\n            visiblePosts: visiblePosts\n        })\n    }\n};\n\nexport default connect(mapStateFromProps, mapDispatchProps)(RootComponent);","import {createStore} from 'redux';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    posts: [],\r\n    visiblePosts: [],\r\n    activeUser: null,\r\n    activePost: null,\r\n    searchQuery: '',\r\n    comments: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n\r\n            };\r\n        case \"SET_POSTS\":\r\n            return {\r\n                ...state,\r\n                posts: action.posts\r\n\r\n            };\r\n        case \"SET_VISIBLE_POSTS\":\r\n            return {\r\n                ...state,\r\n                visiblePosts: action.visiblePosts\r\n            };\r\n\r\n        case \"SET_ACTIVE_USER\":\r\n            return {\r\n                ...state,\r\n                activeUser: action.activeUser\r\n            };\r\n        case \"SET_SEARCH_QUERY\":\r\n            return {\r\n                ...state,\r\n                searchQuery: action.searchQuery\r\n            };\r\n        case \"ADD_COMMENT\":\r\n            const copy = [...state.comments];\r\n            copy.push(action.comment);\r\n            return {\r\n                ...state,\r\n                comments: copy\r\n            };\r\n        case \"SET_ACTIVE_POST\":\r\n            return {\r\n                ...state,\r\n                activePost: action.activePost\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './style/index.scss';\nimport RootComponent from './components/RootComponent';\nimport store from './reducers/rootReducer'\n\nReactDOM.render(\n    <Provider store={store}>\n        <RootComponent/>\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}