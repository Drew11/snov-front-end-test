{"version":3,"sources":["components/UserList/User/User.js","components/UserList/UserList.js","components/CommentList/Comment/Comment.js","components/CommentList/CommentList.js","components/PostList/Post/Post.js","components/PostList/PostList.js","components/Search/Search.js","components/RootComponent.js","reducers/rootReducer.js","index.js"],"names":["User","user","style","setActiveUser","className","onClick","name","connect","state","users","posts","activeUser","dispatch","type","setVisiblePosts","visiblePosts","styleFirstLi","map","index","key","Comment","comment","comments","addComment","id","useState","str","addString","text","currentPostComments","filter","Fragment","onChange","event","target","value","comm","title","content","editing","setEditing","quantityComments","length","post","body","setSearchQuery","searchQuery","searchText","toLowerCase","RootComponent","fetch","promisePosts","promiseUsers","json","this","props","setUsers","setPosts","nextProps","filteredPost","includes","userId","React","Component","store","createStore","action","copy","push","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec051981.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction User({user, style, setActiveUser}) {\r\n\r\n    return (\r\n        <li className={style}\r\n            onClick={() => setActiveUser(user)}\r\n        >\r\n        <div className=\"user-photo\">\r\n        </div>\r\n       <span>\r\n              {user.name}\r\n       </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport User from './User/User';\r\n\r\nfunction UserList({users, posts, activeUser, setVisiblePosts, setActiveUser}) {\r\n\r\n    const styleFirstLi = !activeUser ? 'active_user' : '';\r\n\r\n    function resetVisiblePosts() {\r\n        setVisiblePosts(posts);\r\n        setActiveUser(null);\r\n    }\r\n\r\n    return (\r\n        <ul className={\"app-users-list\"}\r\n        >\r\n            <li className={styleFirstLi}\r\n                onClick={resetVisiblePosts}\r\n            >\r\n            <div className=\"user-photo ilex\">\r\n            </div>\r\n\r\n                All Subscriptions\r\n            </li>\r\n            {\r\n                users.map((user, index) =>\r\n                    <User\r\n                        style={activeUser === user ? 'active_user' : ''}\r\n                        key={index}\r\n                        user={user}\r\n                        setActiveUser={setActiveUser}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateFromProps = (state) => ({\r\n    users: state.users,\r\n    posts: state.posts,\r\n    activeUser: state.activeUser\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setActiveUser: (user) => dispatch({\r\n            type: \"SET_ACTIVE_USER\",\r\n            activeUser: user\r\n        }),\r\n\r\n        setVisiblePosts: (visiblePosts) => dispatch({\r\n            type: \"SET_VISIBLE_POSTS\",\r\n            visiblePosts: visiblePosts\r\n        }),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateFromProps, mapDispatchProps)(UserList);","import React from 'react';\r\n\r\nfunction Comment({comment}) {\r\n    return (\r\n        <li className={\"user-post-added-comment\"}>\r\n            {comment}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Comment from './Comment/Comment'\r\n\r\n\r\nfunction CommentList({id, comments, addComment}) {\r\n\r\n    const [str, addString] = useState('');\r\n    const comment = {\r\n        id: id,\r\n        text: str\r\n    };\r\n\r\n    const currentPostComments = comments.filter(comment => comment.id === id);\r\n\r\n    function checkComment(comm) {\r\n        if (comm.text === '') {\r\n            return;\r\n        }\r\n        addComment(comm);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={\"user-post-comment-caption\"}>Comments</div>\r\n\r\n            <ul className=\"user-post-comments\">\r\n                {\r\n                    currentPostComments.map((comment, index) =>\r\n                        <Comment\r\n                            key={index}\r\n                            comment={comment.text}\r\n                        />\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n\r\n            <div className={\"user-post-set-comment\"}>\r\n                <input\r\n                    onChange={(event) => addString(event.target.value)}\r\n                />\r\n                <button\r\n                    onClick={() => checkComment(comment)}\r\n                >\r\n                    Add\r\n                </button>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n    comments: state.comments\r\n});\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        addComment: (comment) => dispatch({\r\n            type: \"ADD_COMMENT\",\r\n            comment: comment\r\n        })\r\n    }\r\n};\r\nexport default connect(mapStateProps, mapDispatchProps)(CommentList);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CommentList from '../../CommentList/CommentList'\r\n\r\nfunction Post({id, title, content, comments}) {\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const quantityComments = comments.filter(comment => comment.id === id).length;\r\n    const style = editing ? \"user-post-active\" : \"user-post\";\r\n\r\n    return (\r\n\r\n        <li className={style}\r\n        >\r\n            <div>\r\n                <span className={\"user-post-title\"}>\r\n                        {title}\r\n                </span>\r\n\r\n                <span className={\"user-post-content\"}>\r\n                         {content}\r\n                </span>\r\n\r\n                <div className={\"user-post-comments-footer\"}>\r\n\r\n                    <div className={\"user-post-open-comments\"}\r\n                         onClick={() => {\r\n                             setEditing(!editing)\r\n                         }}\r\n                    >\r\n                    </div>\r\n\r\n                    <div className={\"user-post-quantity-comments\"}>\r\n                        {quantityComments ? quantityComments : null}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                editing ? <CommentList id={id}/> : null\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateProps = (state) => ({\r\n    comments: state.comments\r\n});\r\nexport default connect(mapStateProps)(Post);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Post from './Post/Post'\r\n\r\nfunction PostList({visiblePosts}) {\r\n    return (\r\n        <ul className={\"post-list\"}>\r\n            {\r\n                visiblePosts.map(post =>\r\n                    <Post\r\n                        key={post.id}\r\n                        id={post.id}\r\n                        title={post.title}\r\n                        content={post.body}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n    visiblePosts: state.visiblePosts\r\n});\r\nexport default connect(mapStateProps)(PostList);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction Search({setSearchQuery}) {\r\n\r\n    function filterBySearchQuery(event) {\r\n        const searchText = event.target.value.toLowerCase();\r\n        setSearchQuery(searchText);\r\n    }\r\n\r\n    return (\r\n        <div className={\"right-block-search\"}>\r\n\r\n            <input\r\n                   className={\"search\"}\r\n                   type=\"text\"\r\n                   onChange={filterBySearchQuery}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setSearchQuery: (searchQuery) => dispatch({\r\n            type: \"SET_SEARCH_QUERY\",\r\n            searchQuery: searchQuery\r\n        }),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchProps)(Search);","import React from 'react';\nimport {connect} from 'react-redux';\nimport UserList from './UserList/UserList';\nimport PostList from './PostList/PostList';\nimport Search from './Search/Search';\n\nclass RootComponent extends React.Component {\n\n    async componentDidMount() {\n        const promisePosts = await fetch('https://jsonplaceholder.typicode.com/posts');\n        const promiseUsers = await fetch('https://jsonplaceholder.typicode.com/users');\n        const posts = await promisePosts.json();\n        const users = await promiseUsers.json();\n\n        this.props.setUsers(users);\n        this.props.setPosts(posts);\n        this.props.setVisiblePosts(posts);\n    }\n\n    componentDidUpdate(nextProps) {\n\n        if ((this.props.activeUser !== nextProps.activeUser) || (this.props.searchQuery !== nextProps.searchQuery)) {\n\n            let filteredPost;\n\n            if (this.props.activeUser) {\n                filteredPost = this.props.posts\n                    .filter(post => post.title.includes(this.props.searchQuery))\n                    .filter(post => post.userId === this.props.activeUser.id);\n            } else {\n                filteredPost = this.props.posts.filter(post => post.title.includes(this.props.searchQuery))\n            }\n            this.props.setVisiblePosts(filteredPost);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <main>\n\n                    <div className={\"left-block\"}>\n\n                        <div className={\"left-block-logo\"}>\n                        </div>\n\n                        <span className={\"left-block-caption\"}>\n                            Subscriptions\n                        </span>\n\n                        <UserList/>\n                    </div>\n\n                    <div className={\"right-block\"}>\n                        <Search/>\n                        <PostList/>\n                    </div>\n\n                </main>\n\n                <footer>\n                </footer>\n            </div>\n        );\n    }\n}\n\nconst mapStateFromProps = (state) => ({\n    activeUser: state.activeUser,\n    posts: state.posts,\n    searchQuery: state.searchQuery\n});\n\nconst mapDispatchProps = (dispatch) => {\n    return {\n        setUsers: (users) => dispatch({\n            type: \"SET_USERS\",\n            users: users\n        }),\n        setPosts: (posts) => dispatch({\n            type: \"SET_POSTS\",\n            posts: posts\n        }),\n        setVisiblePosts: (visiblePosts) => dispatch({\n            type: \"SET_VISIBLE_POSTS\",\n            visiblePosts: visiblePosts\n        })\n    }\n};\n\nexport default connect(mapStateFromProps, mapDispatchProps)(RootComponent);","import {createStore} from 'redux';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    posts: [],\r\n    visiblePosts: [],\r\n    activeUser: null,\r\n    searchQuery: '',\r\n    comments: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n\r\n            };\r\n        case \"SET_POSTS\":\r\n            return {\r\n                ...state,\r\n                posts: action.posts\r\n\r\n            };\r\n        case \"SET_VISIBLE_POSTS\":\r\n            return {\r\n                ...state,\r\n                visiblePosts: action.visiblePosts\r\n            };\r\n\r\n        case \"SET_ACTIVE_USER\":\r\n            return {\r\n                ...state,\r\n                activeUser: action.activeUser\r\n            };\r\n        case \"SET_SEARCH_QUERY\":\r\n            return {\r\n                ...state,\r\n                searchQuery: action.searchQuery\r\n            };\r\n        case \"ADD_COMMENT\":\r\n            const copy = [...state.comments];\r\n            copy.push(action.comment);\r\n            return {\r\n                ...state,\r\n                comments: copy\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './style/index.scss';\nimport RootComponent from './components/RootComponent';\nimport store from './reducers/rootReducer'\n\nReactDOM.render(\n    <Provider store={store}>\n        <RootComponent/>\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}