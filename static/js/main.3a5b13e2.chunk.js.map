{"version":3,"sources":["components/UserList/User/User.js","components/UserList/UserList.js","components/CommentList/Comment/Comment.js","components/CommentList/CommentList.js","components/PostList/Post/Post.js","components/PostList/PostList.js","components/Search/Search.js","components/RootComponent.js","reducers/rootReducer.js","index.js"],"names":["User","user","style","setActiveUser","className","onClick","name","connect","state","users","posts","activeUser","dispatch","type","styleFirstLi","map","index","key","Comment","comment","comments","addComment","id","useState","str","addString","text","currentPostComments","filter","Fragment","placeholder","onChange","event","target","value","preventDefault","comm","checkComment","post","setActivePost","activePost","quantityComments","length","title","body","visiblePosts","setStyle","setSearchQuery","searchQuery","searchText","toLowerCase","RootComponent","fetch","promisePosts","promiseUsers","json","this","props","setUsers","setPosts","setVisiblePosts","nextProps","filteredPost","includes","userId","href","React","Component","store","createStore","action","copy","push","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a5b13e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction User({user, style, setActiveUser}) {\r\n\r\n    return (\r\n        <li className={style}\r\n            onClick={() => setActiveUser(user)}\r\n        >\r\n        <div className=\"user-photo\">\r\n        </div>\r\n       <span>\r\n              {user.name}\r\n       </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport User from './User/User';\r\n\r\nfunction UserList({users, posts, activeUser, setActiveUser}) {\r\n\r\n    const styleFirstLi = !activeUser ? 'active_user' : '';\r\n\r\n    function resetVisiblePosts() {\r\n        setActiveUser(null);\r\n    }\r\n\r\n    return (\r\n        <ul className={\"app-users-list\"}\r\n        >\r\n            <li className={styleFirstLi}\r\n                onClick={resetVisiblePosts}\r\n            >\r\n            <div className=\"user-photo ilex\">\r\n            </div>\r\n\r\n                All Subscriptions\r\n            </li>\r\n            {\r\n                users.map((user, index) =>\r\n                    <User\r\n                        style={activeUser === user ? 'active_user' : ''}\r\n                        key={index}\r\n                        user={user}\r\n                        setActiveUser={setActiveUser}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateFromProps = (state) => ({\r\n    users: state.users,\r\n    posts: state.posts,\r\n    activeUser: state.activeUser\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setActiveUser: (user) => dispatch({\r\n            type: \"SET_ACTIVE_USER\",\r\n            activeUser: user\r\n        }),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateFromProps, mapDispatchProps)(UserList);","import React from 'react';\r\n\r\nfunction Comment({comment}) {\r\n    return (\r\n        <li className={\"user-post-added-comment\"}>\r\n            {comment}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Comment from './Comment/Comment'\r\n\r\nfunction CommentList({id, comments, addComment}) {\r\n\r\n    const [str, addString] = useState('');\r\n    const comment = {\r\n        id: id,\r\n        text: str\r\n    };\r\n\r\n    const currentPostComments = comments.filter(comment => comment.id === id);\r\n\r\n    function checkComment(event, comm) {\r\n        event.preventDefault();\r\n        if (comm.text === '') {\r\n            return;\r\n        }\r\n        addComment(comm);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={\"user-post-comment-caption\"}>Comments</div>\r\n\r\n            <ul className=\"user-post-comments\">\r\n                {\r\n                    currentPostComments.map((comment, index) =>\r\n                        <Comment\r\n                            key={index}\r\n                            comment={comment.text}\r\n                        />\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n\r\n            <form className={\"user-post-set-comment\"}>\r\n                <input\r\n                    placeholder={\"Type your message\"}\r\n                    onChange={(event)=> {\r\n                        addString(event.target.value);\r\n                        event.preventDefault();\r\n                    }}\r\n\r\n                />\r\n                <button\r\n                    onClick={(event) => checkComment(event, comment)}\r\n                >\r\n                    Add\r\n                </button>\r\n            </form>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n    comments: state.comments\r\n});\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        addComment: (comment) => dispatch({\r\n            type: \"ADD_COMMENT\",\r\n            comment: comment\r\n        })\r\n    }\r\n};\r\nexport default connect(mapStateProps, mapDispatchProps)(CommentList);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CommentList from '../../CommentList/CommentList'\r\n\r\nfunction Post({post, comments, style, activePost, setActivePost}) {\r\n\r\n\r\n    const quantityComments = comments.filter(comment => comment.id === post.id).length;\r\n\r\n    return (\r\n\r\n        <li className={style}\r\n        >\r\n            <div>\r\n                <span className={\"user-post-title\"}>\r\n                        {post.title}\r\n                </span>\r\n\r\n                <span className={\"user-post-content\"}>\r\n                         {post.body}\r\n                </span>\r\n\r\n                <div className={\"user-post-comments-footer\"}>\r\n\r\n                    <div className={\"user-post-open-comments\"}\r\n                         onClick={() => {\r\n                           if(style==='user-post-active'){\r\n                             setActivePost(null)\r\n                           }else\r\n                           setActivePost(post);\r\n\r\n                         }}\r\n                    >\r\n                    </div>\r\n\r\n                    <div className={\"user-post-quantity-comments\"}>\r\n                        {quantityComments ? quantityComments : null}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n              style==='user-post-active' ? <CommentList id={post.id}/> : null\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateProps = (state) => ({\r\n    comments: state.comments\r\n});\r\nexport default connect(mapStateProps)(Post);","import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Post from './Post/Post'\r\n\r\nfunction PostList({visiblePosts}) {\r\n\r\n  const [activePost, setActivePost] = useState(null);\r\n\r\n\r\n  function setStyle(post, activePost) {\r\n    if(activePost && (post.id === activePost.id)){\r\n      return \"user-post-active\"\r\n    }\r\n    return\"user-post\";\r\n  }\r\n\r\n    return (\r\n        <ul className={\"post-list\"}>\r\n            {\r\n                visiblePosts.map(post =>\r\n\r\n\r\n                    <Post\r\n                        key={post.id}\r\n                        post={post}\r\n                        style={setStyle(post, activePost)}\r\n                        setActivePost={setActivePost}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n    visiblePosts: state.visiblePosts\r\n});\r\nexport default connect(mapStateProps)(PostList);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction Search({setSearchQuery}) {\r\n\r\n    function filterBySearchQuery(event) {\r\n        const searchText = event.target.value.toLowerCase();\r\n        setSearchQuery(searchText);\r\n    }\r\n\r\n    return (\r\n        <div className={\"right-block-search\"}>\r\n\r\n            <input\r\n                   className={\"search\"}\r\n                   type=\"text\"\r\n                   onChange={filterBySearchQuery}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setSearchQuery: (searchQuery) => dispatch({\r\n            type: \"SET_SEARCH_QUERY\",\r\n            searchQuery: searchQuery\r\n        }),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchProps)(Search);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserList from './UserList/UserList';\r\nimport PostList from './PostList/PostList';\r\nimport Search from './Search/Search';\r\n\r\nclass RootComponent extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        const promisePosts = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n        const promiseUsers = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const posts = await promisePosts.json();\r\n        const users = await promiseUsers.json();\r\n\r\n        this.props.setUsers(users);\r\n        this.props.setPosts(posts);\r\n        this.props.setVisiblePosts(posts);\r\n    }\r\n\r\n    componentDidUpdate(nextProps) {\r\n\r\n        if ((this.props.activeUser !== nextProps.activeUser) || (this.props.searchQuery !== nextProps.searchQuery)) {\r\n\r\n            let filteredPost;\r\n\r\n            if (this.props.activeUser) {\r\n                filteredPost = this.props.posts\r\n                    .filter(post => post.title.includes(this.props.searchQuery))\r\n                    .filter(post => post.userId === this.props.activeUser.id);\r\n            } else {\r\n                filteredPost = this.props.posts.filter(post => post.title.includes(this.props.searchQuery))\r\n            }\r\n            this.props.setVisiblePosts(filteredPost);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <main>\r\n\r\n                    <div className={\"left-block\"}>\r\n\r\n                        <a href={\"https://drew11.github.io/snov-front-end-test/\"}>\r\n                            <div className={\"left-block-logo\"}/>\r\n                        </a>\r\n\r\n                        <span className={\"left-block-caption\"}>\r\n                            Subscriptions\r\n                        </span>\r\n\r\n                        <UserList/>\r\n\r\n                    </div>\r\n\r\n                    <div className={\"right-block\"}>\r\n\r\n                        <Search/>\r\n\r\n                        <PostList/>\r\n\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateFromProps = (state) => ({\r\n    activeUser: state.activeUser,\r\n    posts: state.posts,\r\n    searchQuery: state.searchQuery\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        setUsers: (users) => dispatch({\r\n            type: \"SET_USERS\",\r\n            users: users\r\n        }),\r\n        setPosts: (posts) => dispatch({\r\n            type: \"SET_POSTS\",\r\n            posts: posts\r\n        }),\r\n        setVisiblePosts: (visiblePosts) => dispatch({\r\n            type: \"SET_VISIBLE_POSTS\",\r\n            visiblePosts: visiblePosts\r\n        })\r\n    }\r\n};\r\n\r\nexport default connect(mapStateFromProps, mapDispatchProps)(RootComponent);","import {createStore} from 'redux';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    posts: [],\r\n    visiblePosts: [],\r\n    activeUser: null,\r\n    searchQuery: '',\r\n    comments: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n\r\n            };\r\n        case \"SET_POSTS\":\r\n            return {\r\n                ...state,\r\n                posts: action.posts\r\n\r\n            };\r\n        case \"SET_VISIBLE_POSTS\":\r\n            return {\r\n                ...state,\r\n                visiblePosts: action.visiblePosts\r\n            };\r\n\r\n        case \"SET_ACTIVE_USER\":\r\n            return {\r\n                ...state,\r\n                activeUser: action.activeUser\r\n            };\r\n        case \"SET_SEARCH_QUERY\":\r\n            return {\r\n                ...state,\r\n                searchQuery: action.searchQuery\r\n            };\r\n        case \"ADD_COMMENT\":\r\n            const copy = [...state.comments];\r\n            copy.push(action.comment);\r\n            return {\r\n                ...state,\r\n                comments: copy\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport './style/index.scss';\r\nimport RootComponent from './components/RootComponent';\r\nimport store from './reducers/rootReducer'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <RootComponent/>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}